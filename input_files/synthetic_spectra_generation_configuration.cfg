[turbospectrum_compiler]
# The compiler used to compile turbospectrum. ifort, gnu, ifx or m3dis
compiler = ifort

[MainPaths]
# Main paths for the input and output files
code_path = ./turbospectrum/
interpolators_path = ./scripts/model_interpolators/
line_list_path = ./input_files/linelists/linelist_for_fitting/
model_atmosphere_grid_path_1d = ./input_files/model_atmospheres/1D/
model_atmosphere_grid_path_3d = ./input_files/model_atmospheres/3D/
model_atoms_path = ./input_files/nlte_data/model_atoms/
departure_file_path = ./input_files/nlte_data/
departure_file_config_path = ./input_files/nlte_data/nlte_filenames.cfg
output_path = ./synthetic_spectra/
input_parameter_path = ./input_files/
temporary_directory_path = ./temp_directory/

[AtmosphereParameters]
# Atmosphere type. ('1D' / '3D')
atmosphere_type = 1D
# Whether or not molecules are included in the fit ('True' / 'False')
include_molecules = True
# Whether to use nlte or not. ('True' or 'False')
nlte = False
# Elements to have in NLTE (just choose whichever elements you want to have in NLTE)
# nlte_elements = Mg Ca Fe
nlte_elements = Fe
# Wavelength setup [AA]
wavelength_min = 6500
wavelength_max = 6600
wavelength_delta = 0.005
# Common resolution for all spectra (lambda_center/FWHM). If 0, no convolution is done
resolution = 0

[ExtraParameters]
# Extra parameters
# Debug mode. If 1, will print more Python output. If 2, will print more Fortran output. Recommended to keep at 0
debug_mode = 0
# Number of CPUs to use for the fit (1 = no parallelisation). If 0, will use all available CPUs
number_of_cpus = 1
# Name of the cluster (if not launched locally), only used for printing purposes
cluster_name =
# whether to save unnormalised synthetic spectra or not ('True' or 'False')
save_unnormalised_spectra = False

[InputFile]
# Input file name with the atmospheric parameters to generate the synthetic spectra
input_filename = synthetic_spectra_parameters

[SlurmClusterParameters]
# Parameters for the Slurm cluster
# Type of cluster. Can be 'slurm' or 'local'. 'local' ignores the other parameters
cluster_type = local
# Number of nodes to use, cpus are taken from the number_of_cpus parameter
number_of_nodes = 1
# Memory per CPU in GB
memory_per_cpu_gb = 3.6
# Commands to run before the script. Each command is separated by a semicolon. example below purges the modules and loads the ones needed
script_commands = module purge;module load basic-path;module load intel;module load anaconda3-py3.10
# Time limit for the job in hours
time_limit_hours = 167
# Partition to use in the cluster passed to the --partition flag
partition = debug

[AdvancedOptions]
# Only change these if you know what you're doing!!
# Value of lpoint for turbospectrum in spectrum.inc file
lpoint_turbospectrum = 500000
# compute_intensity? True = compute intensity, False = compute flux
compute_intensity_flag = False
# intensity angles to use (defaults are given already)
intensity_angles = 0.010018 0.052035 0.124619 0.222841 0.340008 0.468138 0.598497 0.722203 0.830825 0.916958 0.974726 1.000000
# m3dis parameters
m3dis_python_package_name = m3dis

[m3disParameters]
# Parameters for the m3dis code
# Number of different nu points (less = faster, but more memory)
n_nu = 1
# Less = faster, but might need higher for 3D or NLTE
# 1D NLTE - 100 seems to work, 1D LTE - 10 or less?
hash_table_size = 100
# Number of cores to use for each separate m3dis run (leave it at 1 for 1D)
mpi_cores = 1
# Only NLTE parameters, iterations is how many times to iterate, convlim is the convergence limit
# iterations_max_precompute is how many times to iterate when precomputing the departure coefficients
# iterations_max is how many times to iterate when fitting when using precomputed departure coefficients (recommended lower than iterations_max_precompute)
iterations_max_precompute = 10
iterations_max = 3
convlim = 0.01
# Only 3D parameters, snap is the snapshot number, dims is the number of dimensions, nx, ny, nz are the resolution of the model (if Stagger)
snap = 1
dims = 23
nx = 10
ny = 10
nz = 230